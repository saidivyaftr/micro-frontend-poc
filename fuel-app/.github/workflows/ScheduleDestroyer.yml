name: Destroy Ephemeral Environments

on:
  schedule:
    - cron: '0 */10 * * *' # Runs every 10 hours
  workflow_dispatch:
    inputs:
      environments:
        type: string
        description: 'Comma Separated list of names of ephemeral environments you want to destroy eg. "ephem1","ephem2","ephem3"'
        required: true

jobs:
  environments:
    name: Find Environments
    runs-on: ubuntu-latest
    outputs:
      environments: ${{ steps.environments.outputs.environments }}
      num_of_env: ${{ steps.environments.outputs.num_of_env }}
    steps:
      - name: Consecutive Run Wait
        uses: frontier-devops/consecutive-workflow@main
        with:
          token: ${{ secrets.GH_PAT }}

      - name: Process
        if: ${{ github.event_name != 'workflow_dispatch' }}
        id: process
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labelToCheck = 'Deployed';
            const { data: openIssues } = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              per_page: 100
            });
            const openIssuesWithPrefix = [];
            await openIssues.forEach(issue => {
              const labels = issue.labels.map(label => label.name);
              const issueNumber = issue.number;
              if (labels.includes(labelToCheck)){
                console.log('Checking for:')
                console.log('Issue Number:',issue.number)
                console.log('Issue Title:',issue.title)
                openIssuesWithPrefix.push(`ephem${issueNumber}`);
              }
            });
            console.log(openIssuesWithPrefix)
            core.setOutput('openIssuesWithPrefix', openIssuesWithPrefix);
      - name: Outputs
        id: environments
        run: |
          if [[ '${{ github.event_name }}' == 'workflow_dispatch' ]]; then
            envs=$(echo '[${{ inputs.environments }}]' | jq '.')
            echo  $envs
            delimiter="$(openssl rand -hex 8)"
            echo "environments<<${delimiter}" >> "${GITHUB_OUTPUT}"
            echo "$envs" >> "${GITHUB_OUTPUT}"
            echo "${delimiter}" >> "${GITHUB_OUTPUT}"
          else
            envs=$(echo '${{ steps.process.outputs.openIssuesWithPrefix }}' | jq '.')
            echo  $envs
            delimiter="$(openssl rand -hex 8)"
            echo "environments<<${delimiter}" >> "${GITHUB_OUTPUT}"
            echo "$envs" >> "${GITHUB_OUTPUT}"
            echo "${delimiter}" >> "${GITHUB_OUTPUT}"
          fi
          num_of_env=$(echo $envs | jq '. | length')
          echo "num_of_env=$num_of_env" >> $GITHUB_OUTPUT

  call_workflow:
    needs: environments
    if: (needs.environments.outputs.num_of_env > 0)
    strategy:
      max-parallel: 1
      matrix:
        environment: ${{ fromJson( needs.environments.outputs.environments ) }}
    uses: frontier-devops/dig-dotcom-orchestrator/.github/workflows/destroy.yml@main
    with:
      environment: ${{ matrix.environment }}
      app: 'homepage'
      ephemeral: 'true'
    secrets: inherit

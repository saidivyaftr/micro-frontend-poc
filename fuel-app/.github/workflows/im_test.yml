name: Test JSON Parsing

on:
  workflow_dispatch:

env:
  environment: dev

jobs:
  parseJSON:
    name: Parse JSON
    runs-on: ubuntu-latest
    environment: 
      name: dev
    env:
      app_name: ftr-homepage-dev
      rg: rg-appservice-homepage-dev-001
    outputs:
      #prop1: ${{ steps.set_vars.outputs.prop1 }}      
      #prop2: ${{ steps.set_vars.outputs.prop2 }}      
      #prop3: ${{ steps.set_vars.outputs.prop3 }}
      settingsFromJSON: ${{ steps.parse_json.outputs.settings }}
      #originalCfg: ${{ steps.get_original_cfg.outputs.originalCfg }}
    steps:
      - name: Code checkout
        uses: actions/checkout@v3
#      - name: Parse JSON
#        id: set_var
#        run: |
#          content=`cat ./appSettings.json`
#          # the following lines are only required for multi line json
#          content="${content//'%'/'%25'}"
#          content="${content//$'\n'/'%0A'}"
#          content="${content//$'\r'/'%0D'}"
#          # end of optional handling for multi line json
#          echo "::set-output name=contentJson::$content"
#        shell: bash
#      - name: Output
#        id: props
#        run: |
#          #echo "${{fromJson(steps.set_var.outputs.contentJson).dev.SITECORE_API_URL}}"
#          #echo ::set-output name=prop1::"${{fromJson(steps.set_var.outputs.contentJson).dev.SITECORE_API_URL}}"
#          #echo ::set-output name=prop2::"${{fromJson(steps.set_var.outputs.contentJson).dev.DOTCOM_URL}}"
#          #echo ::set-output name=prop3::"${{ secrets.SITECORE_API_KEY }}"
#          echo ::set-output name=contentJson::"${{ steps.set_var.outputs.contentJson }}"
#        shell: bash
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Parse JSON
        id: parse_json
        uses: ./.github/actions/ParseJson
        with:
          file_path: "appSettings.json"
          env: ${{ env.environment }}
      - name: Compose appservice settings string
        id: composeSettingsFromJson
        uses: ./.github/actions/StringComposer
        with:
          identifier: "webappSettings"
          string: ${{ steps.parse_json.outputs.settings }}
      - name: Print set variables
        run: |
          echo ${{ steps.composeSettingsFromJson.outputs.composedString }}
        shell: bash
#      - name: Sleep to change azure webapp settings
#        run: |
#          sleep 1m
#        shell: bash
#      - name: String converter
#        run: |
#          pattern="<DollarChar>"
#          replacement="$"
#          result=$(echo ${ steps.composeSettingsFromJson.outputs.composedString } | sed "s/$pattern/$replacement/g")
#          echo $result
#          $return="${{ steps.composeSettingsFromJson.outputs.composedString }}"
#          echo $return
#          pattern="<DollarChar>"
#          echo $pattern
#          $replacement="$"
#          echo "${$return//$pattern/$replacement}"
#        shell: bash 
      - name: Update appservice settings
        uses: azure/appservice-settings@v1
        id: updateConfig
        with:
          app-name: ${{ env.app_name }}
          app-settings-json: ${{ steps.composeSettingsFromJson.outputs.composedString }}
#          app-settings-json: '[{ "name": "SITECORE_API_KEY", "value": "${{ secrets.SITECORE_API_KEY }}"}]'
#      - name: Update secrets in config
#        run: |
#          try {
#            [String]$settings = "${{ steps.parse_json.outputs.settings }}"
            
#            try {
              # there is a problem with Bash handling powershell '`n' character
              # hence below replace is required
#              $settings = $settings.replace("<new_line>", "`n")
#              [Hashtable]$HT = ConvertFrom-StringData -StringData $settings
#            } catch {
#              $msg = "[ERR] Unexpected error to convert from string data." 
#              Write-Output $msg
#              $Error.Clear()
#              throw $msg
#            }

#            $HT.GetEnumerator() | ForEach-Object {
#              if ($($_.value) -eq "GITHUB_SECRET") {
#                $key = $($_.key)
#                write-host $key
                #$value = "${{ secrets.SITECORE_API_KEY }}"
#                $value = "`${{ secrets.$key }}"
#                write-host $value
#                az webapp config appsettings set --name  ${{ env.app_name }} --settings $key=$value --resource-group ${{ env.rg }}
#              }
#            }
#          } catch {
#            Write-Output "[ERR]: $($_.Exception)"
#            Write-Output "Execution failed"
#            Exit 1
#          }        
#        shell: pwsh
      - name: Update secrets in config
        run: |
          az webapp config appsettings set --name  ${{ env.app_name }} --settings SITECORE_API_KEY=${{ secrets.SITECORE_API_KEY }} --resource-group ${{ env.rg }} --output none
        shell: bash
#        shell: pwsh
#          try {
#            $Error.Clear()
#            az webapp config appsettings set --name  ${{ env.app_name }} --settings SITECORE_API_KEY=${{ secrets.SITECORE_API_KEY }} --resource-group ${{ env.rg }}
            
#            if ($Error) {
#              $myMsg = "Set appsettings config command returned error: $(($Error[0].Exception.Message).ToString())"
#              Throw $myMsg
#            }
#          } catch {
#              Write-Output "[ERR] Error happened during the webapp appsettings config set: '$_'"
#              $Error.Clear()
#          }        
#        shell: pwsh
#      - name: Update appservice settings
#        uses: azure/appservice-settings@v1
#        id: updateConfig
#        with:
#          app-name: ${{ env.app_name }}
#          app-settings-json: '[{ "name": "SITECORE_API_KEY", "value": "${{ secrets.SITECORE_API_KEY }}"}]'
      - name: Azure logout
        run: az logout
        shell: bash
        if: always()



# https://stackoverflow.com/questions/54110411/javascriptserializer-is-not-allowed-in-net-core-project          
# newtonsoft.json
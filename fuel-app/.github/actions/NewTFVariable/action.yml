name: "New Terraform Workspace variable"
description: "Create new Terraform Workspace variable"

inputs:
  tf_token:
    description: "Terraform token"
    required: true
  tf_wsp_id:
    description: "Terraform Workspace internal id"
    required: true
  tf_var_name:
    description: "New Terraform Workspace variable name"
    required: true
  tf_var_category:
    description: "New Terraform Workspace variable category"
    required: false 
    default: "terraform" 
  tf_var_value:
    description: "New Terraform Workspace variable value"
    required: true

runs:
  using: "composite"
  steps:
  - name: "Create new Terraform Workspace variable"
    id: newWsp
    shell: pwsh
    run: |
      try {
        [String]$token = "${{ inputs.tf_token }}"
        [String]$uri = "https://app.terraform.io/api/v2/vars"
        [String]$workspaceID = "${{ inputs.tf_wsp_id }}"
        [String]$varName = "${{ inputs.tf_var_name }}"
        [String]$varValue = "${{ inputs.tf_var_value }}"
        [String]$category = "${{ inputs.tf_var_category }}"
        [String]$varDescription = "This variable is used by the Terraform to create uniquly named resources"

        # Variable name validation
        # Can only contain letters, numbers, underscores, and hyphens
        $pattern = "^[a-zA-Z0-9\-_]+$"
        if (!($varName -match $pattern)) {
            Throw "Variable name used '$varName' contains illegal characters. Variable name can only contain letters, numbers, underscores, and hyphens"
        }

        $headers = @{
          'Authorization' = "Bearer ${{ inputs.tf_token }}"
          'Content-Type' = 'application/vnd.api+json'
        }

        $body = @"
        {
          "data": {
            "type":"vars",
            "attributes": {
              "key":"$varName",
              "value":"$varValue",
              "description":"$varDescription",
              "category":"$category",
              "hcl":false,
              "sensitive":false
            },
            "relationships": {
              "workspace": {
                "data": {
                  "id":"$workspaceID",
                  "type":"workspaces"
                }
              }
            }
          }
        }
      "@
        
        Write-Host "Create new Terraform Workspace variable '$varName'"
        try {
          $response = Invoke-WebRequest -Uri $uri -Method Post -Headers $headers -Body $body
        } catch {
          $msg = "Unexpected response received. Status Code : '$($_.Exception.Response.StatusCode.Value__)'. Description : '$($_.Exception.Response.StatusDescription)'."
          Throw "$msg Details:`r`n`t$($_)"
        }

        if ($response.statuscode -eq '201') {
          Write-Host "New Terraform Workspace variable '$varName' successfully created with the following value '$varValue' assigned"
        } else {
          $msg = "Unexpected response code '$($response.statuscode)' received."
          Throw $msg
        }

        Write-Host "Action execution completed successfully"
        Exit 0
      } catch {
        Write-Host "[ERR]: $($_.Exception)"
        Write-Host "Action execution failed"
        Exit 1
      }